/**
@fn obj::slaying
@section Use
<table>
	<tr>
		<th>Type(s)</th>
		<th>Description</th>
	</tr>	<tr>
		<td>
@ref page_type_18, @ref page_type_31
		</td><td>            This string specifies the item that must be put on the altar to
            activate it. It can either be the name of an archetype, or directly
            the name of an object. Yet, titles are not recognized by altars.
            Remember to put a note somewhere, telling the player what he is
            expected to drop on the altar. (Often this is put in the altar's
            name: E.g. "drop 100 platinum coins")</td>
	</tr>
	<tr>
		<td>
@ref page_type_122
		</td><td>            If &lt;key string&gt; is set, only players with a special key of
            matching &lt;key string&gt; are able to open the container.</td>
	</tr>
	<tr>
		<td>
@ref page_type_103
		</td><td>            &lt;cost arch&gt; is the name of the archetype the player has to put
            on the converter, as payment.</td>
	</tr>
	<tr>
		<td>
@ref page_type_42
		</td><td>            The created object will bear the name specified in &lt;name
            of creation&gt;, and not use any title. If nothing is set, the standard name and title of
            the archetype are used.</td>
	</tr>
	<tr>
		<td>
@ref page_type_51
		</td><td>            &lt;match name&gt; specifies the name of the object we are looking
            for. Actually it does also check for the &lt;key string&gt; in
            key-objects, but for this case inventory checkers are often more
            powerful to use.</td>
	</tr>
	<tr>
		<td>
@ref page_type_116
		</td><td>            Specifies the script file name that should be executed. Relative
            file names are relative to the path name of the map file this even
            is in. Absolute file names are looked up in the maps base directory.</td>
	</tr>
	<tr>
		<td>
@ref page_type_66
		</td><td>            The exit path defines the map that the player is transferred to. You
            can enter an absolute path, beginning with '/' (for example
            "/peterm/FireTemple/fire1"). It can also be a relative path, not
            beginning with '/' (On the map "/peterm/FireTemple/Fire2" for
            example I could use the relative path "Fire1"). Use relative paths
            whenever possible! Note that upper/lower case must always be set
            correctly. However, please use lower case only. It is well possible
            to have an exit pointing to the same map that the exit is on. If
            slaying is not set in an exit, the player will see a message like
            "the exit is closed".</td>
	</tr>
	<tr>
		<td>
@ref page_type_64
		</td><td>            This string specifies the object we are looking for: We have a match
            if the player does/don't carry a key object or a mark with identical
            &lt;key string&gt;. Note that key objects usually appear as
            "passports" in this context. A typical example is the city gate
            mechanism of Scorn.</td>
	</tr>
	<tr>
		<td>
@ref page_type_163
		</td><td>            Contains the verb that is used to construct a message to the player
            applying the item transformer.</td>
	</tr>
	<tr>
		<td>
@ref page_type_20
		</td><td>            The &lt;key string&gt; in the door must be identical with the &lt;key
            string&gt; in the special key, then the door is unlocked. It is VERY
            important to set the &lt;key string&gt; to something that is unique
            among the CF map set.

            DON'T EVER USE the default string "set_individual_value".</td>
	</tr>
	<tr>
		<td>
@ref page_type_55, @ref page_type_52
		</td><td>            The &lt;key string&gt; can be detected by inventory
            checkers/detectors. If the player already has a force with that &lt;key
            string&gt;, there won't be inserted a second one.</td>
	</tr>
	<tr>
		<td>
@ref page_type_17
		</td><td>            the &lt;match race&gt; defines the object we're looking for. If &lt;match
            race&gt; matches the monster's or the player's race, we have a
            match. Yes, pedestals can detect a player's race! E.g. you could
            create a place where only fireborns can enter, by setting "slaying
            unnatural".

            If it is set to "player", any player stepping on the pedestal is a
            match. Very useful if you want to open a gate for players but not
            for monsters.</td>
	</tr>
	<tr>
		<td>
@ref page_type_13
		</td><td>            Slaying means the weapon does triple (3x) damage to monsters of the
            specified race. If &lt;slaying race&gt; matches an arch name, only
            monsters of that archetype receive triple damage. Triple damage is
            very effective.</td>
	</tr>
	<tr>
		<td>
@ref page_type_154
		</td><td>                Name of the spell in the rune, if any. &lt;spell name&gt; is
                optional, but if present, overrides the &lt;spell&gt; setting.</td>
	</tr>
	<tr>
		<td>
@ref page_type_21
		</td><td>            This string must be identical with the &lt;key string&gt; in the
            locked door, then it can be unlocked. It can also be used to trigger
            inventory checkers.</td>
	</tr>
	<tr>
		<td>
@ref page_type_41
		</td><td>            The exit path specifies the map that the player is transferred to.
            &lt;exit path&gt; can be an absolute path, beginning with '/' (for
            example "/peterm/FireTemple/fire1"). It can also be a relative path,
            not beginning with '/' (On the map "/peterm/FireTemple/Fire2" for
            example I could use the relative path "Fire1"). Use relative paths
            whenever possible! Note that upper/lower case must always be set
            correctly. However, please use lower case only.

            If the &lt;exit path&gt; is set, ONLY players can get teleported. If
            the &lt;exit path&gt; is unset (empty), anything can get teleported:
            Players, monsters and items. In this case, the destined map is
            automatically the same map the teleporter is on.</td>
	</tr>
	<tr>
		<td>
@ref page_type_15
		</td><td>            Slaying means the weapon does triple (3x) damage to monsters of the
            specified race. If &lt;slaying race&gt; matches an arch name (e.g.
            "big_dragon"), only monsters of that archetype are hit with triple
            damage.

            No god blessings are possible for weapons with a race set in this
            entry (That's because god blessings add triple damage against their
            own enemy races). Triple damage is very effective.</td>
	</tr>

*/
